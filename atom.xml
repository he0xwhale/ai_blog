<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AI whale</title>
  
  <subtitle>Exploring the World of AI</subtitle>
  <link href="https://ai.he0xwhale.xyz/atom.xml" rel="self"/>
  
  <link href="https://ai.he0xwhale.xyz/"/>
  <updated>2025-06-10T03:20:35.708Z</updated>
  <id>https://ai.he0xwhale.xyz/</id>
  
  <author>
    <name>he0xwhale</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用 Hexo 搭建 AI 编程风格的吉卜力风博客</title>
    <link href="https://ai.he0xwhale.xyz/2025/06/09/ai-ghibli-hexo-blog/"/>
    <id>https://ai.he0xwhale.xyz/2025/06/09/ai-ghibli-hexo-blog/</id>
    <published>2025-06-08T21:57:04.000Z</published>
    <updated>2025-06-10T03:20:35.708Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文整合了我在搭建博客过程中的对话内容，系统地记录了使用 Hexo + Volantis 搭建一个 AI 编程主题的吉卜力风格博客的过程，包括部署、主题安装、美化、图标替换、壁纸设置与自动刷新等内容。</p></blockquote><h2 id="1-项目初始化与环境准备"><a href="#1-项目初始化与环境准备" class="headerlink" title="1. 项目初始化与环境准备"></a>1. 项目初始化与环境准备</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br><span class="line">hexo init ai_blog</span><br><span class="line"><span class="built_in">cd</span> ai_blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>确认版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>✅ <strong>为什么要确认版本？</strong></p><p>Volantis 主题对 Hexo 有最低版本要求。根据 Volantis 官方文档，推荐使用 Hexo 6.3.0 或更高版本，以获得最佳兼容性和功能支持。</p><p>使用以上命令检查当前版本是否符合要求。如果你的 Hexo 版本低于要求，可以通过以下方式升级：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo@latest</span><br></pre></td></tr></table></figure><h2 id="2-主题安装与配置-Volantis"><a href="#2-主题安装与配置-Volantis" class="headerlink" title="2. 主题安装与配置 Volantis"></a>2. 主题安装与配置 Volantis</h2><blockquote><p>✅ <strong>推荐使用 Git 子模块的方式安装主题，以便未来方便升级、避免嵌套仓库冲突。</strong></p></blockquote><h3 id="2-1-安装-Volantis-主题（推荐方式-✅）"><a href="#2-1-安装-Volantis-主题（推荐方式-✅）" class="headerlink" title="2.1. 安装 Volantis 主题（推荐方式 ✅）"></a>2.1. 安装 Volantis 主题（推荐方式 ✅）</h3><ol><li>Fork Volantis 仓库到你自己的 GitHub 账户<br>前往官方仓库：<br>👉 <a href="https://github.com/volantis-x/hexo-theme-volantis">https://github.com/volantis-x/hexo-theme-volantis</a><br>点击右上角的 Fork，创建你自己的 Volantis 仓库，例如：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/your-username/hexo-theme-volantis</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>之所以这样做，是因为后面会对 volantis 的源码进行一些修改，通过_config.yml 的修改不起作用</p><ol start="2"><li>将当前 themes&#x2F;volantis 绑定为你自己的 fork</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/volantis</span><br><span class="line"></span><br><span class="line"><span class="comment">## 把当前 remote 改为你的 fork</span></span><br><span class="line">git remote set-url origin https://github.com/your-username/hexo-theme-volantis</span><br><span class="line"></span><br><span class="line"><span class="comment">## 检查 remote 是否设置正确</span></span><br><span class="line">git remote -v</span><br></pre></td></tr></table></figure><p>你应该看到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">origin  https://github.com/your-username/hexo-theme-volantis (fetch)</span><br><span class="line">origin  https://github.com/your-username/hexo-theme-volantis (push)</span><br></pre></td></tr></table></figure><ol start="3"><li>推送你当前本地修改到你自己的 fork（而不是官方）</li></ol><p>添加官方仓库为 upstream 远程，方便后续同步更新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add upstream https://github.com/volantis-x/hexo-theme-volantis</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将来如果官方有更新：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">## 拉取官方更新</span><br><span class="line">git fetch upstream</span><br><span class="line"></span><br><span class="line">## 合并你想要的分支，例如官方的 6.0</span><br><span class="line">git checkout custom-fontawesome</span><br><span class="line">git merge upstream/6.0</span><br><span class="line">## 手动解决冲突并 commit</span><br></pre></td></tr></table></figure><ol start="4"><li>用 Git 子模块正式管理主题，使得整个流程更加清晰</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 在主 Hexo 项目根目录下执行</span></span><br><span class="line">git submodule add https://github.com/your-username/hexo-theme-volantis themes/volantis</span><br><span class="line">git submodule init</span><br><span class="line">git submodule update</span><br></pre></td></tr></table></figure><p>这会将 <code>volantis</code> 主题作为一个 Git 子模块管理，优势如下：</p><ul><li><strong>便于更新</strong>：只需进入子模块目录 <code>themes/volantis</code>，运行 <code>git pull</code> 即可同步官方主题更新；</li><li><strong>干净的仓库结构</strong>：不会将主题代码混入你的主仓库提交中；</li><li><strong>避免冲突</strong>：防止主题目录被错误识别为嵌套 Git 仓库，减少 Git 管理异常。</li></ul><hr><h3 id="2-2-❌-不推荐的方式（容易踩坑）"><a href="#2-2-❌-不推荐的方式（容易踩坑）" class="headerlink" title="2.2. ❌ 不推荐的方式（容易踩坑）"></a>2.2. ❌ 不推荐的方式（容易踩坑）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/volantis-x/hexo-theme-volantis.git themes/volantis</span><br></pre></td></tr></table></figure><p>具体的原因可以参考第四部分内容：Volantis 子模块管理：踩坑与修复实录</p><h3 id="2-3-配置主题"><a href="#2-3-配置主题" class="headerlink" title="2.3. 配置主题"></a>2.3. 配置主题</h3><p>确认主题安装后，在 Hexo 根目录的 <code>_config.yml</code> 中添加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">volantis</span></span><br></pre></td></tr></table></figure><h2 id="3-推送到-GitHub-Pages"><a href="#3-推送到-GitHub-Pages" class="headerlink" title="3. 推送到 GitHub Pages"></a>3. 推送到 GitHub Pages</h2><h3 id="3-1-添加远程仓库"><a href="#3-1-添加远程仓库" class="headerlink" title="3.1. 添加远程仓库"></a>3.1. 添加远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin https://github.com/yourname/ai_blog.git</span><br></pre></td></tr></table></figure><h3 id="3-2-添加-gitignore，忽略-public-与-node-modules"><a href="#3-2-添加-gitignore，忽略-public-与-node-modules" class="headerlink" title="3.2. 添加 .gitignore，忽略 public&#x2F; 与 node_modules&#x2F;"></a>3.2. 添加 .gitignore，忽略 public&#x2F; 与 node_modules&#x2F;</h3><p>.gitignore 文件正常应该已经包含了 public 和 node_modules，如果已经包含，请忽略这一步</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;public/&quot;</span> &gt;&gt; .gitignore</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;node_modules/&quot;</span> &gt;&gt; .gitignore</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;chore: initial commit&quot;</span></span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><h3 id="3-3-配置-Hexo-部署到-gh-pages"><a href="#3-3-配置-Hexo-部署到-gh-pages" class="headerlink" title="3.3. 配置 Hexo 部署到 gh-pages"></a>3.3. 配置 Hexo 部署到 gh-pages</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## _config.yml</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/yourname/ai_blog.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">gh-pages</span></span><br></pre></td></tr></table></figure><h3 id="3-4-发布博客"><a href="#3-4-发布博客" class="headerlink" title="3.4. 发布博客"></a>3.4. 发布博客</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><h2 id="4-Volantis-子模块管理：踩坑与修复实录"><a href="#4-Volantis-子模块管理：踩坑与修复实录" class="headerlink" title="4. Volantis 子模块管理：踩坑与修复实录"></a>4. Volantis 子模块管理：踩坑与修复实录</h2><p>在最开始安装 Volantis 主题时，我直接执行了如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/volantis-x/hexo-theme-volantis.git themes/volantis</span><br></pre></td></tr></table></figure><p>看起来一切都很顺利，但当我尝试 <code>git add .</code> 时，Git 却抛出了一个警告：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">warning: 正在添加嵌入式 git 仓库：themes/volantis</span><br></pre></td></tr></table></figure><p>这说明 <code>themes/volantis</code> 目录本身是一个 Git 仓库，等于你把一个完整的仓库嵌套到了你的博客仓库中。Git 不推荐这样做，除非使用子模块机制。否则未来推送或克隆项目时会遇到一堆问题，比如主题目录丢失、部署失败等。</p><h3 id="4-1-✅-正确的解决方案"><a href="#4-1-✅-正确的解决方案" class="headerlink" title="4.1. ✅ 正确的解决方案"></a>4.1. ✅ 正确的解决方案</h3><ol><li>移除嵌套的 Git 仓库：</li></ol>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">rm</span> --cached -r themes/volantis -f</span><br><span class="line"><span class="built_in">rm</span> -rf themes/volantis</span><br></pre></td></tr></table></figure><ol start="2"><li>以子模块方式重新添加：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git submodule add https://github.com/volantis-x/hexo-theme-volantis.git themes/volantis</span><br><span class="line">git commit -m <span class="string">&quot;chore: convert volantis to git submodule&quot;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>初始化并同步子模块：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git submodule init</span><br><span class="line">git submodule update</span><br></pre></td></tr></table></figure><h3 id="4-2-🤔-如何一开始就避免这个坑？"><a href="#4-2-🤔-如何一开始就避免这个坑？" class="headerlink" title="4.2. 🤔 如何一开始就避免这个坑？"></a>4.2. 🤔 如何一开始就避免这个坑？</h3><p>记住：<strong>安装 Hexo 主题时，推荐使用 <code>git submodule add</code>，而不是 <code>git clone</code>。</strong></p><p>正确方式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule add https://github.com/volantis-x/hexo-theme-volantis.git themes/volantis</span><br></pre></td></tr></table></figure><p>（如果需要修改 volantis 的源码，则另外需要 fork 一份，按照上面第二步的操作进行）<br>这样做的好处是结构清晰、维护方便，更新主题也简单，只需进入子模块目录执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/volantis</span><br><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><h3 id="4-3-🔄-后续管理提醒"><a href="#4-3-🔄-后续管理提醒" class="headerlink" title="4.3. 🔄 后续管理提醒"></a>4.3. 🔄 后续管理提醒</h3><p>若以后在新机器上克隆项目，需加上 <code>--recursive</code> 选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --recursive https://github.com/yourname/ai_blog.git</span><br></pre></td></tr></table></figure><p>或补执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git submodule init</span><br><span class="line">git submodule update</span><br></pre></td></tr></table></figure><h2 id="5-字体与图标美化"><a href="#5-字体与图标美化" class="headerlink" title="5. 字体与图标美化"></a>5. 字体与图标美化</h2><h3 id="5-1-替换网站-favicon-图标"><a href="#5-1-替换网站-favicon-图标" class="headerlink" title="5.1. 替换网站 favicon 图标"></a>5.1. 替换网站 favicon 图标</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## _config.yml</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/favicon.ico</span></span><br></pre></td></tr></table></figure><p>上传你自己的图标至 <code>source/</code> 目录。</p><h3 id="5-2-替换-Logo-与博主头像"><a href="#5-2-替换-Logo-与博主头像" class="headerlink" title="5.2. 替换 Logo 与博主头像"></a>5.2. 替换 Logo 与博主头像</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## _config.volantis.yml</span></span><br><span class="line"><span class="attr">navbar:</span></span><br><span class="line">  <span class="attr">logo:</span></span><br><span class="line">    <span class="attr">img:</span> <span class="string">/images/logo-ghibli-ai.png</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="attr">blogger:</span></span><br><span class="line">    <span class="attr">avatar:</span> <span class="string">/images/logo-ghibli-ai.png</span></span><br></pre></td></tr></table></figure><h3 id="5-3-首页封面布局简化"><a href="#5-3-首页封面布局简化" class="headerlink" title="5.3. 首页封面布局简化"></a>5.3. 首页封面布局简化</h3><p>改用简洁风格</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cover:</span></span><br><span class="line">  <span class="attr">layout_scheme:</span> <span class="string">simple</span></span><br></pre></td></tr></table></figure><h3 id="5-4-更换博客背景图为-AI-吉卜力风"><a href="#5-4-更换博客背景图为-AI-吉卜力风" class="headerlink" title="5.4. 更换博客背景图为 AI 吉卜力风"></a>5.4. 更换博客背景图为 AI 吉卜力风</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cover:</span></span><br><span class="line">  <span class="attr">background:</span> <span class="string">/images/bg-ai-ghibli.jpg</span></span><br></pre></td></tr></table></figure><h2 id="6-Font-Awesome-字体本地化"><a href="#6-Font-Awesome-字体本地化" class="headerlink" title="6. Font Awesome 字体本地化"></a>6. Font Awesome 字体本地化</h2><h3 id="6-1-目标"><a href="#6-1-目标" class="headerlink" title="6.1. 目标"></a>6.1. 目标</h3><p>避免 CDN 依赖，提升加载速度与离线浏览体验。</p><h3 id="6-2-修改步骤"><a href="#6-2-修改步骤" class="headerlink" title="6.2. 修改步骤"></a>6.2. 修改步骤</h3><p>步骤：</p><p>1.下载这两个字体文件<br>在你的项目中（建议放到 themes&#x2F;volantis&#x2F;source&#x2F;media&#x2F;fonts 目录）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p themes/volantis/source/media/fonts/VarelaRound</span><br><span class="line"><span class="built_in">mkdir</span> -p themes/volantis/source/media/fonts/UbuntuMono</span><br><span class="line"></span><br><span class="line"><span class="comment">## 下载字体</span></span><br><span class="line">wget https://unpkg.com/volantis-static/media/fonts/VarelaRound/VarelaRound-Regular.ttf -O themes/volantis/source/media/fonts/VarelaRound/VarelaRound-Regular.ttf</span><br><span class="line">wget https://unpkg.com/volantis-static/media/fonts/UbuntuMono/UbuntuMono-Regular.ttf -O themes/volantis/source/media/fonts/UbuntuMono/UbuntuMono-Regular.ttf</span><br></pre></td></tr></table></figure><ol start="2"><li>打开 &#x2F;css&#x2F;all.min.css，搜索类似：</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&quot;../webfonts/fa-solid-900.woff2&quot;</span>) <span class="built_in">format</span>(<span class="string">&quot;woff2&quot;</span>);</span><br></pre></td></tr></table></figure><p>这个路径表示的是从 HTML 中 &#x2F;css&#x2F;all.min.css 出发，回退到根目录后访问 &#x2F;webfonts&#x2F;，这在你的部署目录下应当是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">public/css/all.min.css</span><br><span class="line">public/webfonts/*.woff2</span><br></pre></td></tr></table></figure><p>将 CSS 中路径手动替换为绝对路径：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">src: url(&quot;/webfonts/fa-solid-900.woff2&quot;) format(&quot;woff2&quot;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>修改 theme&#x2F;_config.yml：</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugins:</span></span><br><span class="line">  <span class="attr">fontawesome:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>| 意思是：不要让 Volantis 插件插入 Font Awesome 的 CSS，我们手动插入</p><ol start="4"><li>在 themes&#x2F;volantis&#x2F;layout&#x2F;_partials&#x2F;head&#x2F;head.ejs 中，手动添加这段（确保放在合适位置，比如 <head> 末尾）：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;%= url_for(&#x27;/css/all.min.css&#x27;) %&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>确保你本地的 themes&#x2F;volantis&#x2F;source&#x2F;css&#x2F;all.min.css 和 webfonts 文件夹都已就位</p><h3 id="6-3-Git-提交"><a href="#6-3-Git-提交" class="headerlink" title="6.3. Git 提交"></a>6.3. Git 提交</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/volantis</span><br><span class="line">git add <span class="built_in">source</span>/webfonts/*.woff2</span><br><span class="line">git add <span class="built_in">source</span>/css/all.min.css</span><br><span class="line">git commit -m <span class="string">&quot;feat: 使用本地 Font Awesome 字体，替换 CDN&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：这只影响子模块内，避免影响官方仓库建议在 GitHub 上 fork Volantis 仓库再作为子模块使用。</p></blockquote><h2 id="7-Hexo-开发效率优化与自动刷新"><a href="#7-Hexo-开发效率优化与自动刷新" class="headerlink" title="7. Hexo 开发效率优化与自动刷新"></a>7. Hexo 开发效率优化与自动刷新</h2><h3 id="7-1-安装-browser-sync-插件"><a href="#7-1-安装-browser-sync-插件" class="headerlink" title="7.1. 安装 browser-sync 插件"></a>7.1. 安装 browser-sync 插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install browser-sync --save-dev</span><br></pre></td></tr></table></figure><h3 id="7-2-自动生效体验"><a href="#7-2-自动生效体验" class="headerlink" title="7.2. 自动生效体验"></a>7.2. 自动生效体验</h3><p>在使用 <code>hexo s --draft --open</code> 时 Hexo 会自动集成 browser-sync，页面保存后自动热更新生效。</p><h3 id="7-3-清理遗留-public-文件"><a href="#7-3-清理遗留-public-文件" class="headerlink" title="7.3. 清理遗留 public 文件"></a>7.3. 清理遗留 public 文件</h3><p>切换到 gh-pages 分支部署后，main 分支不再需要保留 <code>public/</code> 内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">rm</span> -r --cached public/</span><br></pre></td></tr></table></figure><p>确认 <code>.gitignore</code> 中已添加 <code>public/</code> 条目。</p><h2 id="8-自动化部署脚本"><a href="#8-自动化部署脚本" class="headerlink" title="8. 自动化部署脚本"></a>8. 自动化部署脚本</h2><p>deploy.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -e  <span class="comment"># 出错即停</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;🧹 Cleaning cache and public folder...&quot;</span></span><br><span class="line">hexo clean</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;📦 Generating static files...&quot;</span></span><br><span class="line">hexo generate</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;🚀 Deploying to GitHub Pages...&quot;</span></span><br><span class="line">hexo deploy</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;✅ Hexo deploy finished.&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 交互式输入 commit message</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;📝 Enter commit message for source code: &quot;</span> commit_msg</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;📁 Committing source code to Git repository...&quot;</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;<span class="variable">$commit_msg</span>&quot;</span></span><br><span class="line">git push origin main</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;🎉 All done!&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用方法：</p><ol><li><p>保存脚本为 deploy.sh</p></li><li><p>赋予执行权限（仅第一次）：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x deploy.sh</span><br></pre></td></tr></table></figure><ol start="3"><li>每次发布时执行：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./deploy.sh</span><br></pre></td></tr></table></figure><h2 id="9-总结"><a href="#9-总结" class="headerlink" title="9. 总结"></a>9. 总结</h2><p>本次博客搭建过程较为完整，期间踩坑不少，如 Git 子模块管理、Volantis 子仓库嵌套、字体本地化路径、Hexo 部署分支等。也收获很多：</p><ul><li>将博客部署到 gh-pages 分支，主仓库保持干净</li><li>美化 Logo、背景、图标统一风格</li><li>替换外部依赖为本地资源，提升加载速度</li><li>自动化开发环境，大幅提升效率</li></ul><hr><p>🌐 <strong>博客地址</strong>：<a href="https://ai.he0xwhale.xyz/">https://ai.he0xwhale.xyz</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文整合了我在搭建博客过程中的对话内容，系统地记录了使用 Hexo + Volantis 搭建一个 AI 编程主题的吉卜力风格博客的过程，包括部署、主题安装、美化、图标替换、壁纸设置与自动刷新等内容。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 i</summary>
      
    
    
    
    <category term="博客搭建" scheme="https://ai.he0xwhale.xyz/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Hexo" scheme="https://ai.he0xwhale.xyz/tags/Hexo/"/>
    
    <category term="Volantis" scheme="https://ai.he0xwhale.xyz/tags/Volantis/"/>
    
    <category term="GitHub Pages" scheme="https://ai.he0xwhale.xyz/tags/GitHub-Pages/"/>
    
    <category term="博客美化" scheme="https://ai.he0xwhale.xyz/tags/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/"/>
    
    <category term="AI编程" scheme="https://ai.he0xwhale.xyz/tags/AI%E7%BC%96%E7%A8%8B/"/>
    
    <category term="吉卜力风" scheme="https://ai.he0xwhale.xyz/tags/%E5%90%89%E5%8D%9C%E5%8A%9B%E9%A3%8E/"/>
    
  </entry>
  
</feed>
